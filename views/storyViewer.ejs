<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Your Story</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="/css/storyViewer.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
 
</head>
<body>

<button class="close-btn" onclick="window.location.href='<%= showDelete ? "/profile" : ("/status/" + userID) %>'">Ã—</button>



  <div class="progress-bar-container">
    <% stories.forEach((s, i) => { %>
      <div class="progress-bar"><div class="progress-bar-fill" id="bar<%= i %>"></div></div>
    <% }); %>
  </div>

  <% stories.forEach((story, i) => { %>
    <div class="story-slide" id="slide<%= i %>">
      <% if (story.mediaType === 'image') { %>
        <img src="<%= story.mediaUrl %>" alt="Story Image" />
      <% } else if (story.mediaType === 'video') { %>
        <video src="<%= story.mediaUrl %>" preload="metadata" muted controls playsinline></video>
      <% } else if (story.mediaType === 'text') { %>
        <div class="text-story" style="background-color: <%= story.backgroundColor || '#4f6ef7' %>;">
          <p><%= story.textContent %></p>
        </div>
      <% } %>

      <% if (showDelete) { %>
      <form method="POST" action="/stories/delete/<%= i %>" class="delete-form">
        
        <button type="submit" class="bin-btn" title="Delete this story">
          <i class="fa fa-trash"></i>
        </button>
      </form>
       <% } %>
      

      <div class="time-posted">
        <% 
          const now = new Date();
          const created = new Date(story.createdAt);
          const diffMs = now - created;
          const diffSeconds = Math.floor(diffMs / 1000);
          const diffMinutes = Math.floor(diffSeconds / 60);
          const diffHours = Math.floor(diffMinutes / 60);
          const diffDays = Math.floor(diffHours / 24);

          let timeString = '';
          if (diffSeconds < 60) {
            timeString = `posted ${diffSeconds} sec ago`;
          } else if (diffMinutes < 60) {
            timeString = `posted ${diffMinutes} min ago`;
          } else if (diffHours < 24) {
            timeString = `posted ${diffHours} hr${diffHours > 1 ? 's' : ''} ago`;
          } else {
            timeString = `posted ${diffDays} day${diffDays > 1 ? 's' : ''} ago`;
          }
        %>
        <%= timeString %>
      </div>
    </div>
  <% }); %>

<script>
const slides = document.querySelectorAll('.story-slide');
const bars = document.querySelectorAll('.progress-bar-fill');
let current = 0;
const imageDuration = 5000;
let timer;

const videoDurations = new Map();

function showSlide(index) {
  if (timer) clearInterval(timer);

  slides.forEach((slide, i) => {

    slide.style.opacity = '0';
    slide.style.pointerEvents = 'none';

    const video = slide.querySelector('video');
    if (video) {
    
      video.pause();
 
    }
    bars[i].style.width = '0%';
  });
  if (index >= slides.length) {
  window.location.href = '<%= showDelete ? "/profile" : ("/status/" + userID) %>';
  return;
}


  const currentSlide = slides[index];
  const currentBar = bars[index];

  currentSlide.style.opacity = '1';
  currentSlide.style.pointerEvents = 'auto';

  const video = currentSlide.querySelector('video');

  if (video) {

    if (!videoDurations.has(index)) {
      if (video.readyState >= 1) {
        videoDurations.set(index, video.duration);
        startVideoPlayback(video, index);
      } else {
        video.onloadedmetadata = () => {
          videoDurations.set(index, video.duration);
          startVideoPlayback(video, index);
        };
      }
    } else {
      startVideoPlayback(video, index);
    }
  } else {
    animateBar(index, imageDuration);
  }
}

function startVideoPlayback(video, index) {
  const duration = videoDurations.get(index);
  
  video.play().catch(() => {
   
  });

  if (timer) clearInterval(timer);

  timer = setInterval(() => {
    if (video.paused) return;

    const progress = (video.currentTime / duration) * 100;
    bars[index].style.width = progress + '%';

    if (progress >= 100) {
      clearInterval(timer);
      current++;
      showSlide(current);
    }
  }, 100);


  function unmuteHandler() {
    if (video.muted) {
      video.muted = false;
      video.volume = 1;
    }
    document.body.removeEventListener('click', unmuteHandler);
  }
  document.body.removeEventListener('click', unmuteHandler);
  document.body.addEventListener('click', unmuteHandler);

  video.onended = () => {
    clearInterval(timer);
    current++;
    showSlide(current);
  };
}

function animateBar(index, duration) {
  let width = 0;
  const bar = bars[index];
  if (timer) clearInterval(timer);

  timer = setInterval(() => {
    width += 100 / (duration / 100);
    bar.style.width = width + '%';

    if (width >= 100) {
      clearInterval(timer);
      current++;
      showSlide(current);
    }
  }, 100);
}


showSlide(current);


document.body.addEventListener('click', (e) => {
  if (e.target.closest('.bin-btn') || e.target.closest('video')) return;

  const x = e.clientX;
  const screenWidth = window.innerWidth;

  if (timer) clearInterval(timer);

  const video = slides[current]?.querySelector('video');
  if (video) {
    video.pause();
  
  }

  if (x > screenWidth / 2) {
    current++;
  } else {
    current = Math.max(0, current - 1);
  }

  showSlide(current);
});
</script>

</body>
</html>
